#!/bin/bash
#PBS -l nodes=1:ppn=4

GENOME="mm10"

#### usage ####
usage() {
	echo Program: "gene2geneDistStat (compute genome wide distance statistics between genes)"
	echo Author: BRIC, University of Copenhagen, Denmark
	echo Version: 1.0
	echo Contact: pundhir@binf.ku.dk
	echo "Usage: gene2geneDistStat -i <file> -o <dir> [OPTIONS]"
	echo "Options:"
	echo " -i <file>   [input file containing gene coordinates (can be stdin)]"
    echo " -o <dir>    [output directory]"
    echo "[OPTIONS]"
    echo " -g <string> [genome (default: mm10)]"
    echo " -h          [help]"
	exit 0
}

#### parse options ####
while getopts i:o:g:h ARG; do
    case "$ARG" in
    i) INFILE=$OPTARG;;
    o) OUTDIR=$OPTARG;;
    g) GENOME=$OPTARG;;
    h) HELP=1;;
    esac
done

## usage, if necessary file and directories are given/exist
if [ -z "$INFILE" -o -z "$OUTDIR" -o "$HELP" ]; then
	usage
fi

## populating files based on input genome
>&2 echo -n "Populating files based on input genome, $GENOME (`date`).. "
GENOME_FILE=$(initialize_genome -i $FINDNFRPATH/data/annotations/GENOME_FILE -g $GENOME)
if [ ! -f "$GENOME_FILE" ]; then
    >&2 echo
    >&2 echo "computation for $GENOME is not available yet"
    >&2 echo "please add the chromosome size file for $GENOME at $FINDNFRPATH/data/annotations"
    >&2 echo "also update the $FINDNFRPATH/data/annotations/GENOME_FILE"
    >&2 echo
    usage
fi
>&2 echo "done"

## create temporary BED file if input is from stdin
if [ "$INFILE" == "stdin" ]; then
    TMP=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
    while read LINE; do
        echo -e "${LINE}"
    done > $TMP
    INFILE=$TMP
fi

## create output directory
mkdir -p ${OUTDIR}

## check if file exists
if [ ! -s $INFILE ]; then
    echo 1
    exit
fi

## start analysis
>&2 echo -n "Starting analysis (`date`).. "
if [ ! -s "${OUTDIR}/gene2geneDistStat.pdf" ]; then
    # -k parameter (grep -w protein_coding /scratch/genomes/annotations/BED/mm10_ensembl_gene.bed | cut -f 1 | sort | uniq -c | sed -E 's/^\s+//g' | sort -k 1rn,1)
    for CHR in $(less ${GENOME_FILE} | cut -f 1 | grep -v chrM); do closestBed -a <(grep -w protein_coding ${INFILE} | perl -ane 'if(!$seen{$F[3]}) { print $_; $seen{$F[3]}=1; }' | grep -w ${CHR}) -b <(grep -w protein_coding ${INFILE} | perl -ane 'if(!$seen{$F[3]}) { print $_; $seen{$F[3]}=1; }' | grep -w ${CHR}) -d -k 2500 -N -g ${GENOME_FILE} 2>/dev/null > ${OUTDIR}/${GENOME}_gene2geneDist.bed.${CHR}; done

    gene2geneDistStat.R -i ${OUTDIR}
fi

grep -w protein_coding ${INFILE} | sortBed -i stdin | mergeBed -i stdin -d 3000 -c 4 -o distinct,count | perl -ane 'chomp($_); $class="other"; if($F[4]>1) { $class="3k"; } print "$F[0]\t$F[1]\t$F[2]\t$F[3]\t$class\n";' | mergeBed -i stdin -d 10000 -c 4,5 -o distinct | perl -ane '$class="$F[4]"; if($F[4]=~/\,/) { $class="10k"; } print "$F[0]\t$F[1]\t$F[2]\t$F[3]\t$class\n";' | mergeBed -i stdin -d 20000 -c 4,5 -o distinct | perl -ane '$class="$F[4]"; if($F[4]=~/\,/) { $class="20k"; } print "$F[0]\t$F[1]\t$F[2]\t$F[3]\t$class\n";'

<<"COMMENT"
cat <(grep -w protein_coding ${INFILE} | sortBed -i stdin | mergeBed -i stdin -d 3000 -c 4 -o distinct,count | perl -ane 'if($F[scalar(@F)-1]>1) { chomp($_); $density=sprintf("%0.2f", ($F[scalar(@F)-1]*100000)/($F[2]-$F[1])); print "$_\t$density\t3k\n"; }') \
    <(grep -w protein_coding ${INFILE} | sortBed -i stdin | mergeBed -i stdin -d 3000 -c 4 -o distinct,count | perl -ane 'if($F[scalar(@F)-1]<=1) { print $_; }' | mergeBed -i stdin -d 10000 -c 4 -o distinct,count | perl -ane 'if($F[scalar(@F)-1]>1) { chomp($_); $density=sprintf("%0.2f", ($F[scalar(@F)-1]*100000)/($F[2]-$F[1])); print "$_\t$density\t10k\n"; }') \
    <(grep -w protein_coding ${INFILE} | sortBed -i stdin | mergeBed -i stdin -d 3000 -c 4 -o distinct,count | perl -ane 'if($F[scalar(@F)-1]<=1) { print $_; }' | mergeBed -i stdin -d 10000 -c 4 -o distinct,count | perl -ane 'if($F[scalar(@F)-1]<=1) { print $_; }' | mergeBed -i stdin -d 20000 -c 4 -o distinct,count | perl -ane 'if($F[scalar(@F)-1]>1) { chomp($_); $density=sprintf("%0.2f", ($F[scalar(@F)-1]*100000)/($F[2]-$F[1])); print "$_\t$density\t20k\n"; }') \
    <(grep -w protein_coding ${INFILE} | sortBed -i stdin | mergeBed -i stdin -d 3000 -c 4 -o distinct,count | perl -ane 'if($F[scalar(@F)-1]<=1) { print $_; }' | mergeBed -i stdin -d 10000 -c 4 -o distinct,count | perl -ane 'if($F[scalar(@F)-1]<=1) { print $_; }' | mergeBed -i stdin -d 20000 -c 4 -o distinct,count | perl -ane 'if($F[scalar(@F)-1]<=1) { chomp($_); $density=sprintf("%0.2f", ($F[scalar(@F)-1]*100000)/($F[2]-$F[1])); print "$_\t$density\tother\n"; }')
COMMENT
>&2 echo "done"

## remove temporary file, if exists
if [ ! -z "$TMP" ]; then
    rm $TMP
fi

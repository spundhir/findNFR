#!/bin/bash
#PBS -l nodes=1:ppn=4

GENOME="mm10";
PROCESSOR=1

#### usage ####
usage() {
	echo Program: "peak2annotation (annotate peaks with their spatial and motif enrichment)"
	echo Author: BRIC, University of Copenhagen, Denmark
	echo Version: 1.0
	echo Contact: pundhir@binf.ku.dk
	echo "Usage: motifAna -i <file> -o <dir> [OPTIONS]"
	echo "Options:"
	echo " -i <file>   [input file having genomic regions in BED format (or stdin)]"
    echo "             [format: chr start end name score strand signalValue]"
    echo " -o <dir>    [output directory to store results]"
    echo "[OPTIONS]"
    echo " -g <string> [genome for which to perform the analysis (mm9, hg19, mm10, hg38, danRer7; default: mm10)]"
    echo " -p <int>    [number of processors to use (default: 1)]"
    echo " -d <int>    [size of region (default: given)]"
	echo " -h          [help]"
	echo
	exit 0
}

#### parse options ####
while getopts i:o:g:p:d:h ARG; do
	case "$ARG" in
		i) BEDFILE=$OPTARG;;
        o) OUTDIR=$OPTARG;;
        g) GENOME=$OPTARG;;
        p) PROCESSOR=$OPTARG;;
        d) SIZE=$OPTARG;;
		h) HELP=1;;
	esac
done

## usage, if necessary file and directories are given/exist
if [ -z "$BEDFILE" -o "$HELP" ]; then
	usage
fi

###################
#helperfunction
function wait_for_jobs_to_finish {
    for job in `jobs -p`
    do
        echo $job
        wait $job
    done
    echo $1
}
###############

<<"COMMENT1"
COMMENT1
>&2 echo -n "Create directory structure... "
#if [ ! -d "$OUTDIR" ]; then
#    mkdir -p $OUTDIR
#fi
>&2 echo "done"

>&2 echo -n "Populating files based on input genome, $GENOME (`date`).. "
GENOME_FILE=$(initialize_genome -i $FINDNFRPATH/data/annotations/GENOME_FILE -g $GENOME)
TSS_FILE=$(initialize_genome -i $FINDNFRPATH/data/annotations/GENOME_FILE -g $GENOME -t)
JASPAR_DB=$(initialize_genome -i $FINDNFRPATH/data/annotations/GENOME_FILE -g $GENOME -O)
DHS_FILE=$(initialize_genome -i $FINDNFRPATH/data/annotations/GENOME_FILE -g $GENOME -D)
if [ ! -f "$GENOME_FILE" -o ! -f "$TSS_FILE" ]; then
    >&2 echo
    >&2 echo "computation for $GENOME is not available yet"
    >&2 echo "please add the chromosome size file for $GENOME at $FINDNFRPATH/data/annotations"
    >&2 echo "also update the $FINDNFRPATH/data/annotations/GENOME_FILE"
    >&2 echo
    usage
fi
>&2 echo "done"

## create temporary BED file if input is from stdin
TMP=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
#TMP="BA4CnrY32vxBf4ZEtNqKdgFe4JoEHmah"
if [ "$BEDFILE" == "stdin" ]; then
    while read LINE; do
        echo -e "${LINE}"
    done
else
    zless $BEDFILE
fi | tabEdit -i stdin -n 7 > ${TMP}.bed

## compute peak distance to closest gene TSS (protein coding)
#closestBed -a <(sortBed -i ${TMP}.bed) -b <(grep -w protein_coding ${TSS_FILE} | cut -f 1-6 | sortBed -i stdin) -D b -t first | cut -f 1-7,14 | peak2annotation.R -i stdin -o 

## compute motif enrichment at peak regions
mkdir -p ${TMP}_dir
if [ "${GENOME}" == "mm10" ]; then
    cut -f 1-6 ${TMP}.bed | liftOver stdin ~/genomes/annotations/LIFT_OVER/mm10ToMm39.over.chain.gz ${TMP.bed.mm39} unMapped
    rm unMapped
    mv ${TMP}.bed.mm39 ${TMP}.bed 
fi
JASPAR_enrich.sh oneSetBg ${JASPAR_DB} ${TMP}.bed analysis/deepPlot/REGIONS_INTEREST.bed ${TMP}_dir 2022 ${PROCESSOR}

## remove temporary file
rm ${TMP}.bed

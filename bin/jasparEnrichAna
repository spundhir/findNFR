#!/bin/bash
#PBS -l nodes=1:ppn=4

GENOME="mm10";
PROCESSOR=1

#### usage ####
usage() {
	echo Program: "jasparEnrichAna (perform motif enrichment analysis using jaspar enrichment)"
	echo Author: BRIC, University of Copenhagen, Denmark
	echo Version: 1.0
	echo Contact: pundhir@binf.ku.dk
	echo "Usage: jasparEnrichAna -i <file> -o <dir> [OPTIONS]"
	echo "Options:"
	echo " -i <file>   [input file having genomic regions in BED format (or stdin)]"
    echo " -o <dir>    [output directory to store results]"
    echo "[OPTIONS]"
    echo " -j <file>   [input file having DNA accessbile regions in BED format as background (default: genome-specific DHS file)]" 
    echo " -g <string> [genome for which to perform the analysis (mm9, hg19, mm10, hg38, danRer7; default: mm10)]"
    echo " -p <int>    [number of processors to use (default: 1)]"
	echo " -h          [help]"
	echo
	exit 0
}

#### parse options ####
while getopts i:o:j:g:p:d:h ARG; do
	case "$ARG" in
		i) BEDFILE=$OPTARG;;
        o) OUTDIR=$OPTARG;;
        j) DHS_FILE=$OPTARG;;
        g) GENOME=$OPTARG;;
        p) PROCESSOR=$OPTARG;;
		h) HELP=1;;
	esac
done

## usage, if necessary file and directories are given/exist
if [ -z "$BEDFILE" -o -z "$OUTDIR" -o "$HELP" ]; then
	usage
fi

###################
#helperfunction
function wait_for_jobs_to_finish {
    for job in `jobs -p`
    do
        echo $job
        wait $job
    done
    echo $1
}

get_seeded_random()
{
    seed="$1"
    openssl enc -aes-256-ctr -pass pass:"$seed" -nosalt </dev/zero 2>/dev/null
}
###############

<<"COMMENT1"
COMMENT1
>&2 echo -n "Create directory/file structure (`date`).. "
mkdir -p ${OUTDIR}
TMP=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
#TMP="BA4CnrY32vxBf4ZEtNqKdgFe4JoEHmah"
if [ "$BEDFILE" == "stdin" ]; then
    while read LINE; do
        echo -e "${LINE}"
    done
else
    zless $BEDFILE
fi | tabEdit -i stdin -n 6 > ${TMP}.bed
>&2 echo "done"

>&2 echo -n "Populating files based on input genome, $GENOME (`date`).. "
GENOME_FILE=$(initialize_genome -i $FINDNFRPATH/data/annotations/GENOME_FILE -g $GENOME)
JASPAR_DB=$(initialize_genome -i $FINDNFRPATH/data/annotations/GENOME_FILE -g $GENOME -O)
if [ -z "${DHS_FILE}" ]; then
    DHS_FILE=$(initialize_genome -i $FINDNFRPATH/data/annotations/GENOME_FILE -g $GENOME -D)
    CRM_FILE=$(initialize_genome -i $FINDNFRPATH/data/annotations/GENOME_FILE -g $GENOME -C)
    zcat ${DHS_FILE} | shuf --random-source=<(get_seeded_random 42) -n 100000 | cut -f 1-6 > ${TMP}.dhs
else
    zless ${DHS_FILE} | grep -v start | cut -f 1-6 > ${TMP}.dhs
fi
cat ${TMP}.bed <(intersectBed -a ${TMP}.dhs -b ${TMP}.bed -v) > ${TMP}.dhs.tmp
mv ${TMP}.dhs.tmp ${TMP}.dhs
DHS_FILE=${TMP}.dhs
>&2 echo "done"

>&2 echo -n "File check (`date`).. "
if [ ! -f "${BEDFILE}" -o ! -f "${GENOME_FILE}" -o ! -d "${JASPAR_DB}" -o ! -f "${DHS_FILE}" ]; then
    >&2 echo
    >&2 echo "computation for $GENOME is not available yet"
    >&2 echo "please add the chromosome size file for $GENOME at $FINDNFRPATH/data/annotations"
    >&2 echo "also update the $FINDNFRPATH/data/annotations/GENOME_FILE"
    >&2 echo
    usage
fi
>&2 echo "done"

>&2 echo -n "Compute Transcription Factor enrichment at peaks (`date`).. "
mkdir -p ${TMP}_dir
rm -r ${TMP}_dir/*
if [ "${GENOME}" == "mm10" ]; then
    #liftOver ${TMP}.bed ~/genomes/annotations/LIFT_OVER/mm10ToMm39.over.chain.gz ${TMP}.bed.tmp unMapped &>/dev/null
    #rm unMapped
    #liftOver ${TMP}.dhs ~/genomes/annotations/LIFT_OVER/mm10ToMm39.over.chain.gz ${TMP}.dhs.tmp unMapped &>/dev/null
    #rm unMapped
    #JASPAR_DB="/home/xfd783/data/09_ALL_PUBLIC/database/04_motifCatalog/jaspar/mm39/lola"
    #JASPAR_enrich.sh oneSetBg ${JASPAR_DB} ${TMP}.bed.tmp ${TMP}.dhs.tmp ${TMP}_dir 2022 ${PROCESSOR} &>${TMP}_dir/log
    #rm ${TMP}.bed.tmp ${TMP}.dhs.tmp
    JASPAR_enrich.sh oneSetBg ${JASPAR_DB} ${TMP}.bed ${TMP}.dhs ${TMP}_dir 2024 ${PROCESSOR} &>${TMP}_dir/log
else
    JASPAR_enrich.sh oneSetBg ${JASPAR_DB} ${TMP}.bed ${TMP}.dhs ${TMP}_dir 2022 ${PROCESSOR} &>${TMP}_dir/log
fi
mv ${TMP}_dir/allEnrichments.tsv ${OUTDIR}/jasparEnrichmentResults.txt

## remove temporary files
rm ${TMP}.bed
rm ${TMP}.dhs
rm -r ${TMP}_dir
>&2 echo "done"
